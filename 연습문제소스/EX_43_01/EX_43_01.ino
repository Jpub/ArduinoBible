#include <Adafruit_NeoMatrix.h>

int ROWS = 8, COLUMNS = 8;
int PIN = 6;

Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(COLUMNS, ROWS, PIN,
          NEO_MATRIX_TOP + NEO_MATRIX_RIGHT + 
          NEO_MATRIX_ROWS + NEO_MATRIX_ZIGZAG);

const uint16_t dotColor[] = {
  matrix.Color(255, 0, 0), matrix.Color(0, 255, 0), matrix.Color(0, 0, 255)
};

const uint8_t PROGMEM user_bmp[][8] = {
  0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C,
  0x08, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x3C, 0x42, 0x02, 0x04, 0x08, 0x10, 0x20, 0x7E,
  0x3C, 0x42, 0x02, 0x1C, 0x02, 0x02, 0x42, 0x3C,
  0x0C, 0x14, 0x24, 0x44, 0x7E, 0x04, 0x04, 0x04,
  0x7E, 0x40, 0x40, 0x7C, 0x02, 0x02, 0x02, 0x7C,
  0x3C, 0x42, 0x40, 0x7C, 0x42, 0x42, 0x42, 0x3C,
  0x7E, 0x02, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40,
  0X3C, 0x42, 0x42, 0x3C, 0x42, 0x42, 0x42, 0x3C,
  0x3C, 0x42, 0x42, 0x3C, 0x04, 0x08, 0x10, 0x20
};

int index = 0;
int colorIndex = 0;

void setup() {
  matrix.begin();
  matrix.setBrightness(10);
}

void loop() {
  matrix.clear();
  matrix.drawBitmap(0, 0, user_bmp[index], 8, 8, dotColor[colorIndex]);
  matrix.show();

  index = (index + 1) % 10;
  colorIndex = (colorIndex + 1) % 3;

  delay(1000);
}
